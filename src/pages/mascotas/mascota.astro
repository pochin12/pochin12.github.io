---
import Layoutmenu from "../../layout/Layoutmenu.astro";
import { turso } from "../../turso";
import { getSession } from "auth-astro/server";
import MascotaListado from "../../components/MascotaListado";

const session = await getSession(Astro.request);
if (!session) {
    return Astro.redirect("/");
}

const correousuario = session.user?.email;
let listadomascotas = [];

const url = Astro.url;
const tipo = url.searchParams.get("tipo");

try {
    const datos  = await turso.execute(
        "select id, nombre, descripcion, tamano, tipo, imagen, color, edad, sexo from mascotas",
    );

    //console.log(rows.rows.length);
    //const listado = rows.rows;

    
    //console.log(listado);
    

    listadomascotas = datos.rows.map((row) => ({
        id: row.id,
        nombre: row.nombre,
        descripcion: row.descripcion,
        tamano: row.tamano,
        color: row.color,
        imagen: row.imagen,
        sexo: row.sexo,
        edad: row.edad,
    }));
} catch (error) {
    console.error("Error al cargar mascotas:", error);
    // Puedes pasar un mensaje de error a tu componente si lo deseas
}


const resultUser = await turso.execute({
    sql: "select correo from usuarios where correo = ?",
    args: [correousuario],
});
//puedo ultilizar el correo en alguna parte para controlar sesion y mostrar o no datos
---

<Layoutmenu>
    <h2>probando las islas</h2>
    <h2>a ver si de verdad carga mas rapido</h2>
    {
        listadomascotas.length === 0 ? (
            <p class="text-center">
                No hay mascotas disponibles en este momento.
            </p>
        ) : (
            <MascotaListado client:visible mascotas={listadomascotas} />

            <div class="container-fluid">
                <div
                    class="card m-0"
                    style="max-height: 65vh; overflow-y: auto;"
                >
                    <div class="row">
                        {datos.rows.map((mascota) => (
                            <div class="card w-50 p-2">
                                <img
                                    class="card-imagen"
                                    src={mascota.imagen}
                                    class="card-img-top"
                                    alt="..."
                                />
                                <div class="card-body p-1">
                                    <h5 class="card-title">{mascota.nombre}</h5>
                                    <p class="card-text">
                                        {mascota.descripcion}
                                    </p>
                                    <p class="card-text">
                                        Color:
                                        {mascota.color}
                                    </p>
                                    <a
                                        href={`/mascotas/${mascota.id}`}
                                        class="btn btn-primary keychainify-checked"
                                    >
                                        Solicitar adopción
                                    </a>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </div>
        )
    }
</Layoutmenu>
<style>
    .container-fluid {
        /* Altura máxima del 70% del viewport height */
        max-height: 100vh;
        overflow-y: auto; /* Habilita el scroll vertical cuando el contenido excede max-height  */
        padding-right: 15px; /* Espacio para la barra de scroll si está a la derecha */
        box-sizing: border-box; /* Incluir padding en el tamaño total */
        border: 3px solid #ffffff; /* Opcional: para visualizar el límite del contenedor */
        border-radius: 8px;
        background-color: #fcfcfc;
        padding: 1rem;
    }

    /* Estilos de la grilla para los elementos */
    .posts-grid {
        display: grid;
        gap: 1rem; /* Espacio entre las tarjetas */
        padding: 0.5rem; /* Padding interno para que las tarjetas no toquen los bordes del scroll */
    }

    /* MOBILE-FIRST: Por defecto, una columna */
    .posts-grid {
        grid-template-columns: 1fr; /* Una columna para dispositivos pequeños */
    }
</style>
